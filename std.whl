struct Math {
    //PI: float // TODO: default params
}
implement Math {
    fn e() : float { return 2.71828; }

    fn pi() : float { return 3.141592653589793; }

    fn pow(val: float, power: int) : float {
        if (power > 0) {
            let times = power;
            while (times > 1) {
                val = val * val;
                times = times - 1;
            }
            return val;
        } else {
            if (power < 0) {
                let calculated = self.pow(val, -1*power);
                return 1.0 / calculated;
            } else {
                return 1.0;
            }
        }
    }

    fn iabs(val: int) : int {
        if (val > 0) {
            return val;
        }
        if (val < 0) {
            return -1*val;
        }
        return 0;
    }

    fn fabs(val: float) : float {
        if (val > 0.0) {
            return val;
        }
        if (val < 0.0) {
            return -1.0*val;
        }
        return 0.0;
    }
};

// test
let math : Math = Math();
// TODO: seems that there a race condition causing this to non-deterministically run or not
print(math.pow(2.5, 2)); // pass
print(math.pow(2.0, -1)); // pass
print(math.pow(2000000.0, 0)); // pass
print(math.fabs(-0.01)); // pass

struct String {
    s: string
} implement String {
    fn to_list() {
        //self.s.to_list(); // soon
    }
};

let str : String = String(s="hello world!");
print(str.s); // pass

struct Boolean {
    b: bool
} implement Boolean {

};

let boo : Boolean = Boolean(b=false);
print(boo.b); // pass